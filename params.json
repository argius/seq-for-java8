{"name":"Seq-for-java8","tagline":"Sequences which are neither Collection nor Stream","body":"Seq-for-Java8\r\n========================================\r\n\r\nThe library of sequencial containers which are neither Collection nor Stream\r\n\r\n\r\nDescription\r\n--------------------\r\n\r\nSequences in Seq-for-Java8 are sequencial containers with few functional methods.\r\n\r\nThese interfaces have been chosen with reference to Streams in java.util.stream and Seq in Scala.\r\nHowever, Sequences are immutable and stateless.\r\n\r\n\r\nExamples\r\n--------------------\r\n\r\n\r\n```\r\n// import net.argius.java8.seq.Sequence;\r\nSequence<String> seq = Sequence.of(\"ant\", \"bean\", \"coffee\");\r\nList<String> list = seq.filter(x -> !x.equals(\"ant\")).reverse().toList();\r\n// => [coffee, bean]\r\n\r\n// import static net.argius.java8.seq.IntSequence.seq;\r\ndouble average = seq(-100, 13, 25, 8, 1).drop(1).average();\r\n// => 11.75\r\n```\r\n\r\n\r\n\r\nLicense\r\n--------------------\r\n\r\nApache License 2.0\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}